colnames(trainSA)
model <- train(chd ~ . , data=trainSA, method="glm", family="binomial")
val = 1000
for (i in 1:50) {}
for (i in 1:50) {
val = val * 1.05
print(val)
}
val = 1000
v = as.vector()
v = vector()
v = c(v, val)
v
3 % 2
3 %% 2
for (i in 1:50) {
if (i %% 3 == 0) {}
}
for (i in 1:50) {
if (i %% 3 == 0) {
val = val * 0.95
} else { val = val * 1.05}
v = c(v, val)
}
v
p = ggplot2 + geom_line(v)
import ggplot2
library(ggplot2)
p = ggplot + geom_line(v)
df = as.data.frame(v)
df
ggplot(df) + geom_line(aes(y=v))
? geom_line
? ggplot
df[3]
df[3,]
nrow(df)
ggplot(df) + geom_line(aes(x=v))
ggplot(df) + geom_line(aes(y=v))
ggplot(df) + geom_line(aes(y=df$v))
df2 = data.frame(c(1:51),v)
df2
df.names = c("x", "y")
df2.names = c("x", "y")
df2
names(df2) = c("x", "y")
df2
ggplot(df) + geom_line(aes(x=x, y=y))
ggplot(df2) + geom_line(aes(x=x, y=y))
ggplot(df2) + geom_line(aes(x=x, y=y, color="blue"))
ggplot(df2) + geom_line(aes(x=x, y=y, colour="blue"))
?aes
ggplot(df2) + geom_line(aes(x=x, y=y, colour="blue"))
options(install.packages.check.source = "no")
install.packages(c("rscproxy","rcom"),repos="http://www.autstat.com/download",lib=.Library,type="win.binary")
library(rcom)
comRegisterRegistry()
installstatconnDCOM()
installstatconnDCOM()
install.packages("excel.link")
.libPaths()
y = c(134.21, 144.54, 139, 116.99, 105.21, 97.75, 112.5, 115.91, 112.3, 111.5, 113.57)
x = c(1,2,3,4,5,6,7,8,9,10)
yAxis = c(134.21, 144.54, 139, 116.99, 105.21, 97.75, 112.5, 115.91, 112.3, 111.5, 113.57)
xAxis = c(1,2,3,4,5,6,7,8,9,10)
df = data.frame(x=xAxis, y=yAxis)
yAxis = c(134.21, 144.54, 139, 116.99, 105.21, 97.75, 112.5, 115.91, 112.3, 111.5)
df = data.frame(x=xAxis, y=yAxis)
df
library(ggplot2)
ggplot(df) + geom_point(aes(x=x, y=y))
ggplot(df) + geom_line(aes(x=x, y=y))
lm1 = lm(y ~ ., df)
lm1
ggplot(df) + geom_line(aes(x=x, y=y)) + geom_abline(intercept = 137.873, slopre= -3.433)
ggplot(df) + geom_line(aes(x=x, y=y)) + geom_abline(intercept = 137.873, slope= -3.433)
ym = mean(df$y)
xm = mean(df$x)
lm2 = lm(I(y - ym)  ~ I(x - xm) - 1, df)
lm2
ggplot(df) + geom_line(aes(x=x, y=y)) + geom_abline(intercept = 137.873, slope= -3.433) + geom_abline(intercept = 0, slope = -3.433)
ggplot(df) + ylim(-150, 150) + geom_line(aes(x=x, y=y)) + geom_abline(intercept = 137.873, slope= -3.433) + geom_abline(intercept = 0, slope = -3.433)
lm1
summary(lm1)
lm1
lm1$coefficients
df1 = data.frame(x=df$x - xm, y = df$y - ym - 1)
df1
df2 = data.frame(x=(df1$x - mean(df1$x) / sd(df1$x), y=(df1$y - mean(df1$y) / sd(df1$y))
df2 = data.frame(x=(df1$x - mean(df1$x) / sd(df1$x)), y=(df1$y - mean(df1$y) / sd(df1$y))
)
df2
mean(df1$x)
mean(df1$y)
lm2 = lm(y ~ ., df2)
lm2
ggplot(df2) + geom_line(aes(x=x, y=y))
ggplot(df2) + geom_line(aes(x=x, y=y)) + geom_abline(intercept = -0.94343, slope = -3.4330)
lm2 = lm(I(y - ym)  ~ I(x - xm) - 1, df)
lm2
lm2
summary(lm2)
lm2$coefficients
lm2$fitted.values
lm2$qr
lm2$effects
lm2$df.residual
lm2$model
lm2$terms
summary(lm2)$r_squared
cc = sumary(lm2)
cc = summary(lm2)
cc
cc$r.squared
c(lm2$coefficients, summary(lm2)$r.squared)
ff = lm2$coefficients
ff
class(ff)
ff$0
ff$1
ff[0]
ff[1]
r3 = c(lm2$coefficients, summary(lm2)$r.squared)
r3[0]
r3[1]
r3[2]
r3 = c(lm2$coefficients, summary(lm2)$r.squared)
source("P:/Q1/R/Q1Linear.R")
xx = c(1,2)
yy = c(0, 96175)
calcLM(xx, yy)
calcLM(xx, yy)
calcLM(xx, yy)
View(df)
calcLM(xx, yy)
calcLM(xx, yy)
q
?
q
quit
source("P:/Q1/R/Q1Linear.R")
calcLM(xx, yy)
source("P:/Q1/R/Q1Linear.R")
calcLM(xx, yy)
xx = c(1,2)
yy=(0, 96175)
yy=c(0, 96175)
calcLM(xx, yy)
yy = c(988597, 987515)
df = data.frame(x=xx, y=yy)
df
xm = mean(df$x)
ym = mean(df$y)
df1 = data.frame(x=df$x - xm - 1, y=df$y - ym)
df1
df2 = data.frame(x=(df1$x - mean(df1$x)) / sd(df1$x), y=(df1$y - mean(df1$y)) / sd(df1$y))
df2
mean(df1$x)
mean(df1$y)
l1 = lm(y ~ x, df)
l1
ggplot(df) + geom_point(aes(x=x, y=y))
ggplot(df) + geom_point(aes(x=x, y=y)) + geom_abline(intercept = 98679, slope=-1082)
df
98679 -1082
ggplot(df) + geom_point(aes(x=x, y=y)) + geom_abline(intercept = 989679, slope=-1082)
xm = mean(df$x)
ym = mean(df$y)
df1 = data.frame(x= (df$x - xm - 1), y = df$y - ym)
df1
ggplot(df1) + geom_point(aes(x=x, y=y))
l1 = lm(y ~ x, df1)
l1
l0 = lm(y ~ x, df)
l0
ggplot(df1) + geom_point(aes(x=x, y=y)) + geom_abline(intercept = -1082, slope=-1082)
mean(df1$x)
mean(df1$y)
sd(df1$x)
sd(df1$y)
df2 = data.frame(x=(df1$x - mean(df1$x))/sd(df1$x), y=(df1$y - mean(df1$y))/sd(df1$y))
df2
l2 = lm(x ~ y, df2)
l2
l2 = lm(y ~ x, df2)
l2
arctg(-1)
?arctg
??arctg
atan(-1)
?atan
atan(-1) * pi
atan(-1) * 180 / pi
df3 = data.frame(x=(df$x - mean(df$x))/sd(df$x), y=(df$y - mean(df$y))/sd(df$y))
l3 = lm(y ~ x, df3)
l3
df3
x0 = c(1,2)
y0 = c(1,4)
df0 = data.frame(x=x0, y=y0)
ggplot(df) + geom_point(aes(x=x,y=y))
ggplot(df0) + geom_point(aes(x=x,y=y))
l0 = lm(y ~ x, df0)
l0
atan(3) * 180 / pi
y0 = c(100,4000)
df0 = data.frame(x=x0, y=y0)
l0 = lm(y ~ x, df0)
l0
atan(3900) * 180 / pi
tan(pi/2)
tan(0)
tan(pi)
tan(pi/2)
tan(pi/4)
x=c(1,2,3,4)
y=c(1,2,3,4)
df =datafram(x=x,y=y)
df =data.frame(x=x,y=y)
l = lm(y ~x, df)
l
y=c(2,4,6,8)
df =data.frame(x=x,y=y)
l = lm(y ~x, df)
l
y=c(2,4,8,16)
df =data.frame(x=x,y=y)
l
l = lm(y ~x, df)
l
ggplot(df) + geom_point(aes(x=x,y=y)) + geom_line(intercept = -4, slope=4.6)
ggplot(df) + geom_point(aes(x=x,y=y)) + geom_abline(intercept = -4, slope=4.6)
y=c(1, 2,4,8)
df =data.frame(x=x,y=y)
l = lm(y ~x, df)
l
ggplot(df) + geom_point(aes(x=x,y=y)) + geom_abline(intercept = -4, slope=4.6)
y=c(2, 4,8,16)
df =data.frame(x=x,y=y)
l = lm(y ~x, df)
l
y=c(2, 4, 6, 12)
df =data.frame(x=x,y=y)
l = lm(y ~x, df)
l
ggplot(df) + geom_point(aes(x=x,y=y)) + geom_abline(intercept = -4, slope=4.6)
ggplot(df) + geom_point(aes(x=x,y=y)) + geom_abline(intercept = -2, slope=3.2)
df1 = data.frame(x=df$x - xm - 1, y=df$y - ym)
df1
df
df1 = data.frame(x=df$x - mean(df$x) - 1, y=df$y - mean(df$y))
df1
df1 = data.frame(x=df$x - mean(df$x), y=df$y - mean(df$y))
df1
ggplot(df) + geom_point(aes(x=x,y=y)) + geom_abline(intercept = 0, slope=2)
y=c(2, 4, 6, 8)
df =data.frame(x=x,y=y)
l = lm(y ~x, df)
l
x = c(1,2,3,4,5)
y = c(1,2,4,8,16)
df =data.frame(x=x,y=y)
ggplot(df) + geom_point(aes(x=x,y=y)) + geom_line(aex(x=x, y=y))
ggplot(df) + geom_point(aes(x=x,y=y)) + geom_line(aes(x=x, y=y))
g = glm(y ~ x, data=df)
g
g = glm(y ~ x, data=df, family="poisson")
g
summary(g)
g0 = glm(y ~ x, data=df)
g0
l0 = lm(y ~ x, data=df)
l0
g1 = glm(y ~ x, data=df, family="binomial")
g
y = c(100, 110, 121, 133.1, 146.41, 161.051, 177.1561, 194.87171, 214.358881, 235.7947691)
x = c(1, 2, 3, 4, 5, 6, 7, 8, 9,10)
df = data.frame(x=x, y=y)
ggplot(df) + geom_point(aes(x=x, y=y))
ggplot(df) + geom_point(aes(x=x, y=log(y))
)
l = lm(log(y) ~ x, df)
l
atan(0.09531) * 180 / pi
y1 = c(100,120,144,172.8,207.36,248.832,298.5984,358.31808,429.981696,515.9780352)
)
y1 = c(100,120,144,172.8,207.36,248.832,298.5984,358.31808,429.981696,515.9780352)
df = data.frame(x=x, y0=y, y1=y1)
df
ggplot(df) + geom_point(aes(x=x, y=log(y0)) + geom_point(aes(x=x, y=log(y1)))
)
ggplot(df) + geom_point(aes(x=x, y=log(y0))) + geom_point(aes(x=x, y=log(y1)))
l0 = lm(log(y0) ~ x, df)
l1 = lm(log(y1) ~ x, df)
l0
l1
df10 = read.csv("d:/tmp/sample.csv")
df10
df10 = read.csv("d:/tmp/sample.csv", sep=';')
df10
ggplot(df10)
ggplot(df10) + geom_point()
ggplot(df10) + geom_point(x=x, y=.)
ggplot(df10) + geom_point(aes(x=x, y=x1)) + geom_point(aes(x=x, y=x3))
ggplot(df10) + geom_point(aes(x=x, y=X1)) + geom_point(aes(x=x, y=X3))
libraray(reshape)
library(reshape)
library(reshape2)
d = melt(df, id.vars = x)
d = melt(df10, id.vars = x)
d
df10
d = melt(df10, id.vars = "x")
d
ggplot(d) + geom_point(aes(x,value,col=variable))
ggplot(d) + geom_point(aes(x,log(value),col=variable))
ggplot(d) + geom_line(aes(x,log(value),col=variable))
l = lm(log(X10) ~ x, df10))
l = lm(log(X10) ~ x, df10)
l
atan(0.6931) * 180 / pi
df$X10
df10$X10
ggplot(df10) + geom_line(aes(x, X10))
ggplot(df10) + geom_line(aes(x, log(X10))
)
log(df$X10)
log(df10$X10)
?log
log10(df10$X10)
log2(df10$X10)
e
exp
exp(1)
dfb = read.csv("d:/tmp/BBB.csv", sep=';')
dfb
d2 = melt(dfb, id.vars = "x")
d2
ggplot(d) + geom_line(aes(x,log(value),col=variable))
dfb
View(dfb)
l3 = lm(log10(Y03) ~ x, data = dfb)
l3
l = lm(log10(Y04) ~ x, data = dfb)
l
l4 = lm(log10(Y04) ~ x, data = dfb)
l4
l5 = lm(log10(Y05) ~ x, data = dfb)
l5
l4
l3
l5
l4
l3
l5 = lm(log10(Y05) ~ x, data = dfb)
l4 = lm(log10(Y04) ~ x, data = dfb)
l3 = lm(log10(Y03) ~ x, data = dfb)
l6 = lm(log10(Y06) ~ x, data = dfb)
l6
l5
l4
l3
ggplot(dfb) + geom_line(aes(x,log(value),col=variable))
d2 = melt(dfb, id.vars = "x")
ggplot(d2) + geom_line(aes(x,log(value),col=variable))
ggplot(d2) + geom_line(aes(x,log(value),col=variable)) + theme_bw()
l1 = lm(log10(Y01) ~ x, data = dfb)
l11 = lm(log10(Y01.1) ~ x, data = dfb)
l2 = lm(log10(Y02) ~ x, data = dfb)
l1
l11
l2 = lm(log10(Y02) ~ x, data = dfb)
l2
l3
l1 = lm(log10(Y01) ~ x, data = dfb)
l1
l2 = lm(log10(Y02) ~ x, data = dfb)
l2
l3
dfb = read.csv("d:/tmp/BBB.csv", sep=';')
d2 = melt(dfb, id.vars = "x")
ggplot(d2) + geom_point(aes(x,log10(value),col=variable)) + theme_bw()
ggplot(d2) + geom_point(aes(x,log10(value),col=variable)) + theme_bw() + geom_line(aes(x,log10(value),col=variable))
l1 = lm(log10(Y01) ~ x, data = dfb)
l2 = lm(log10(Y02) ~ x, data = dfb)
l3 = lm(log10(Y03) ~ x, data = dfb)
l4 = lm(log10(Y04) ~ x, data = dfb)
l5 = lm(log10(Y05) ~ x, data = dfb)
coef(l1)
coef(l2)
coef(l3)
coef(l4)
coef(l5)
df10 = read.csv("d:/tmp/sample.csv", sep=';')
df10
d2 = melt(df10, id.vars = "x")
ggplot(d2) + geom_point(aes(x,log10(value),col=variable)) + theme_bw() + geom_line(aes(x,log10(value),col=variable))
l10 = lm(log10(Y01) ~ x, data = df10)
l10 = lm(log10(Y10) ~ x, data = df10)
l20 = lm(log10(Y20) ~ x, data = df10)
l30 = lm(log10(Y30) ~ x, data = df10)
l40 = lm(log10(Y40) ~ x, data = df10)
l50 = lm(log10(Y50) ~ x, data = df10)
coef(l10);coef(l20);coef(l30);coef(l40);coef(l50)
apply(df10, 1, mean)
sum(df$x)
mean(df$x)
sum(df10$x)
apply(df10, 2, mean)
media = apply(df10, 2, mean)
media
mapply(rep, media, 10)
mat = mapply(rep, media, 10)
df10 - mat
dx = df10 - mat
dx / mat
(df10$x - mean(df10$x)) / mean(df10$x)
media = apply(df10, 2, mean)
desv = apply(df10m, 2, sd)
mat = mapply(rep, media, 10)
mdesv = mapply(rep, desv, 10)
dx = df10 - mat
dx = dx / mdesv
media = apply(df10, 2, mean)
desv = apply(df10, 2, sd)
mat = mapply(rep, media, 10)
mdesv = mapply(rep, desv, 10)
dx = df10 - mat
dx = dx / mdesv
dx
ggplot(dx) + geom_point(aes(x,log10(value),col=variable)) + theme_bw() + geom_line(aes(x,log10(value),col=variable))
dm = melt(dx, id.vars="x")
ggplot(dm) + geom_point(aes(x,log10(value),col=variable)) + theme_bw() + geom_line(aes(x,log10(value),col=variable))
ggplot(dm) + geom_point(aes(x,value,col=variable)) + theme_bw() + geom_line(aes(x,value,col=variable))
hist(dm$X10)
dm
hist(dx$X10)
hist(dx$Y10)
atan(1)
atan(1) * 180 / pi
lm(log10(Y00) ~ x, data=df10)
10 ^ 0.301
pi/2
atan(pi/2)
180/pi
atan(pi/4)
tan(pi/4)
atan(1)
0.78539 * 180 / pi
.LibPaths()
.libPaths()
env()
Sys.info()
system()
Sys.sytem()
Sys.info()
Sys.getenv()
Sys.info()
sessionInfo()
x = c(1,2,3,4,5,6,7,8,9)
x[2:]
x[2:4]
x[2:length(x)]
x[4:length(x)]
setwd("D:/Prj/Q1/R")
source("Q1Base.R")
source("Q1PlotData.R")
ry = vector()
rx
ry
rx = seq(1:length(ry))
df = data.frame(X=x, Y=y)
df = data.frame(X=rx, Y=ry)
ggplot(df) + theme_bw() + geom_line(aes(x=X, y=Y, colour="red"))
v2
v2()
source('Q1PlotData.R')
v2()
list(-0.364028445,1.539771579,0.851663727,0.747172488,-0.717008651,-1.929517106,-0.742460302,1.322262281,
0.562216128,2.334947065,0.34522176,-0.750718447,-1.198857955,0.744474181,-1.083791985,-1.051165873,
0.501552578,0.016920007,0.6279922,0.809433014,1.541226761,0.097636418,2.248634061,0.099306756,
0.916118176,1.103401557,1.835193819,-0.577427045,1.220730304,-1.288260202,0.178333005,-0.400340633,
0.664366013,-1.832409467,0.478169231,0.654344029,-1.647156344,0.469116186,-0.963545533,-0.248875049,
-0.841418265,0.912623197,-0.711880096,1.549898975,1.779385338,0.681743191,0.526181206,2.641010512,
1.269612344,-1.954044626,1.447682389,-0.397175307,0.53824364,-0.849546686,0.610797378,-0.824497975,
0.218793748,0.781664688,0.64850755,1.574906339,-1.402707726,-0.181638536,0.115383625,-0.10440312,
0.321893774,-0.045568939,3.021245836,-0.761233953,1.731168916,0.403523386,1.708030848,-0.881768799,
1.340503086,0.031650483,-1.524180261,0.700955587,-1.357586045,0.758067473,-1.305490869,-0.538679904,
2.223353852,-1.239436244,1.598709295,-2.464499493,0.409444458,-1.672399098,0.14452729,-0.629263425,
-0.535479027,-0.613737129,-1.461188667,-0.509104931,0.116094404,0.275050021,0.665410408,0.750984213,
1.200728491,0.15288346,0.313448179,0.514499916,-0.261464198,-0.756953083,0.526003243,-0.270010956,
-0.806886529,-2.512304889,-1.272094334,-1.623983921,-0.798126791,1.337472583,-0.835251667,-0.07698155,
-0.156563299,-0.797601022,0.632937886,-0.559608004,-0.292640278,-0.058520924,-0.024975355,0.426964639,
)
v2()
source('Q1PlotData.R')
v2()
graph.histogram((v2()))
source('Q1PlotData.R')
graph.histogram((v2()))
source('Q1PlotData.R')
graph.histogram((v2()))
source('Q1PlotData.R')
graph.histogram((v2()))
source('Q1PlotData.R')
graph.histogram((v2()))
source('Q1PlotData.R')
graph.histogram((v2()))
source('Q1PlotData.R')
graph.histogram((v2()))
source('Q1PlotData.R')
prueba()
